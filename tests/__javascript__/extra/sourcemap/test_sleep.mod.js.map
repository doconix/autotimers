{
	"version": 3,
	"file": "tests/__javascript__/test_sleep.mod.js",
	"sources": [
		"tests/test_sleep.py"
	],
	"sourcesContent": [
		"from test_base import TestBase\nS = jQuery\n\n# I really need to make func() take a long time so I can ensure sleep instead of interval\n    \nclass TestSleep(TestBase):\n    NEEDED_TIME = 1000\n\n    def begin(self):\n        self.counter = 0\n        self.start_time = __new__(Date())\n        def func():\n            self.counter += 1\n        self.div.timers().SleepTimer({\n            'millis': 400,\n        }).do(func)\n        \n    def end(self):\n        self.assertTrue(self.counter == 2)\n        \nS.fn.timers.TESTS.append(TestSleep)\n    \n    \n\nclass TestSleepAfter(TestBase):\n    NEEDED_TIME = 1000\n\n    def begin(self):\n        self.counter = 0\n        self.start_time = __new__(Date())\n        def func():\n            self.counter += 1\n        self.div.timers().SleepAfterTimer({\n            'millis': 400,\n        }).do(func)\n        \n    def end(self):\n        # immediate run, plus two after timer runs\n        self.assertTrue(self.counter == 3)\n        \nS.fn.timers.TESTS.append(TestSleepAfter)\n    \n    \n    "
	],
	"mappings": "AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAIA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AAAA;AAIA;AACA;AAAA;AAAA;AAEA;AAIA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AAAA;AAIA;AAEA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA"
}