{
	"version": 3,
	"file": "tests/__javascript__/test_interval.mod.js",
	"sources": [
		"tests/test_interval.py"
	],
	"sourcesContent": [
		"from test_base import TestBase\n\n# I really need to make func() take a long time so I can ensure interval instead of sleep\n    \nclass TestInterval(TestBase):\n    NEEDED_TIME = 1000\n\n    def begin(self):\n        self.counter = 0\n        self.start_time = __new__(Date())\n        def func():\n            self.counter += 1\n        Timers.IntervalTimer(self.div, {\n            'millis': 400,\n        }).do(func)\n        \n    def end(self):\n        self.assertTrue(self.counter == 2)\n        \ndocument.TESTS.append(TestInterval)\n    \n    \n\nclass TestIntervalAfter(TestBase):\n    NEEDED_TIME = 1000\n\n    def begin(self):\n        self.counter = 0\n        self.start_time = __new__(Date())\n        def func():\n            self.counter += 1\n        Timers.IntervalAfterTimer(self.div, {\n            'millis': 400,\n        }).do(func)\n        \n    def end(self):\n        self.assertTrue(self.counter == 3)\n        \ndocument.TESTS.append(TestIntervalAfter)\n    \n    \n\n    \n    \n    "
	],
	"mappings": "AAAA;AAAA;AAIA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AAAA;AAIA;AACA;AAAA;AAAA;AAEA;AAIA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AAAA;AAIA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA"
}